"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const dag_map_1 = require("dag-map");
/**
 * Take an array of vertices (objects with a name, value, and optional before / after), create a
 * directed acyclic graph of them, and return the vertex values in a sorted array.
 *
 * @package util
 */
function topsort(items, options = {}) {
    let graph = new dag_map_1.default();
    items.forEach((item) => {
        let value = options.valueKey ? item[options.valueKey] : item;
        graph.add(item.name, value, item.before, item.after);
    });
    let sorted = [];
    graph.topsort((key, value) => {
        sorted.push(value);
    });
    return sorted;
}
exports.default = topsort;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9wc29ydC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYWNidXJkaW5lL1Byb2plY3RzL2RlbmFsaS9kZW5hbGkvIiwic291cmNlcyI6WyJsaWIvdXRpbHMvdG9wc29ydC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHFDQUEwQjtBQVMxQjs7Ozs7R0FLRztBQUNILGlCQUFnQyxLQUFlLEVBQUUsVUFBaUMsRUFBRTtJQUNsRixJQUFJLEtBQUssR0FBRyxJQUFJLGlCQUFHLEVBQUUsQ0FBQztJQUN0QixLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSTtRQUNqQixJQUFJLEtBQUssR0FBRyxPQUFPLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQzdELEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdkQsQ0FBQyxDQUFDLENBQUM7SUFDSCxJQUFJLE1BQU0sR0FBVSxFQUFFLENBQUM7SUFDdkIsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsRUFBRSxLQUFLO1FBQ3ZCLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDckIsQ0FBQyxDQUFDLENBQUM7SUFDSCxNQUFNLENBQUMsTUFBTSxDQUFDO0FBQ2hCLENBQUM7QUFYRCwwQkFXQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBEQUcgZnJvbSAnZGFnLW1hcCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVmVydGV4IHtcbiAgbmFtZTogc3RyaW5nO1xuICBiZWZvcmU6IHN0cmluZyB8IHN0cmluZ1tdO1xuICBhZnRlcjogc3RyaW5nIHwgc3RyaW5nW107XG4gIFtrZXk6IHN0cmluZ106IGFueTtcbn1cblxuLyoqXG4gKiBUYWtlIGFuIGFycmF5IG9mIHZlcnRpY2VzIChvYmplY3RzIHdpdGggYSBuYW1lLCB2YWx1ZSwgYW5kIG9wdGlvbmFsIGJlZm9yZSAvIGFmdGVyKSwgY3JlYXRlIGFcbiAqIGRpcmVjdGVkIGFjeWNsaWMgZ3JhcGggb2YgdGhlbSwgYW5kIHJldHVybiB0aGUgdmVydGV4IHZhbHVlcyBpbiBhIHNvcnRlZCBhcnJheS5cbiAqXG4gKiBAcGFja2FnZSB1dGlsXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRvcHNvcnQoaXRlbXM6IFZlcnRleFtdLCBvcHRpb25zOiB7IHZhbHVlS2V5Pzogc3RyaW5nIH0gPSB7fSk6IGFueVtdIHtcbiAgbGV0IGdyYXBoID0gbmV3IERBRygpO1xuICBpdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgbGV0IHZhbHVlID0gb3B0aW9ucy52YWx1ZUtleSA/IGl0ZW1bb3B0aW9ucy52YWx1ZUtleV0gOiBpdGVtO1xuICAgIGdyYXBoLmFkZChpdGVtLm5hbWUsIHZhbHVlLCBpdGVtLmJlZm9yZSwgaXRlbS5hZnRlcik7XG4gIH0pO1xuICBsZXQgc29ydGVkOiBhbnlbXSA9IFtdO1xuICBncmFwaC50b3Bzb3J0KChrZXksIHZhbHVlKSA9PiB7XG4gICAgc29ydGVkLnB1c2godmFsdWUpO1xuICB9KTtcbiAgcmV0dXJuIHNvcnRlZDtcbn1cbiJdfQ==