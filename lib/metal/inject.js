"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IS_INJECTION = Symbol.for('denali:container:injection-placeholder');
function isInjection(value) {
    return value != null && Boolean(value[exports.IS_INJECTION]);
}
exports.isInjection = isInjection;
function inject(lookup) {
    return {
        [exports.IS_INJECTION]: true,
        lookup
    };
}
exports.default = inject;
function injectInstance(instance, container) {
    let classMeta = container.metaFor(instance.constructor);
    if (!classMeta.injectionsCache) {
        let injections = { container };
        for (let key in instance) {
            let value = instance[key];
            if (isInjection(value)) {
                injections[key] = container.lookup(value.lookup);
            }
        }
        classMeta.injectionsCache = injections;
    }
    // console.log('applying injections to', instance, classMeta.injectionsCache);
    Object.assign(instance, classMeta.injectionsCache);
}
exports.injectInstance = injectInstance;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5qZWN0LmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9hY2J1cmRpbmUvUHJvamVjdHMvZGVuYWxpL2RlbmFsaS8iLCJzb3VyY2VzIjpbImxpYi9tZXRhbC9pbmplY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFPYSxRQUFBLFlBQVksR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLHdDQUF3QyxDQUFDLENBQUM7QUFFakYscUJBQTRCLEtBQVU7SUFDcEMsTUFBTSxDQUFDLEtBQUssSUFBSSxJQUFJLElBQUksT0FBTyxDQUFDLEtBQUssQ0FBQyxvQkFBWSxDQUFDLENBQUMsQ0FBQztBQUN2RCxDQUFDO0FBRkQsa0NBRUM7QUFFRCxnQkFBd0MsTUFBYztJQUNwRCxNQUFNLENBQU07UUFDVixDQUFDLG9CQUFZLENBQUMsRUFBRSxJQUFJO1FBQ3BCLE1BQU07S0FDUCxDQUFDO0FBQ0osQ0FBQztBQUxELHlCQUtDO0FBRUQsd0JBQStCLFFBQWEsRUFBRSxTQUFvQjtJQUNoRSxJQUFJLFNBQVMsR0FBRyxTQUFTLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUN4RCxFQUFFLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO1FBQy9CLElBQUksVUFBVSxHQUFjLEVBQUUsU0FBUyxFQUFFLENBQUM7UUFDMUMsR0FBRyxDQUFDLENBQUMsSUFBSSxHQUFHLElBQUksUUFBUSxDQUFDLENBQUMsQ0FBQztZQUN6QixJQUFJLEtBQUssR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDMUIsRUFBRSxDQUFDLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDdkIsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ25ELENBQUM7UUFDSCxDQUFDO1FBQ0QsU0FBUyxDQUFDLGVBQWUsR0FBRyxVQUFVLENBQUM7SUFDekMsQ0FBQztJQUNELDhFQUE4RTtJQUM5RSxNQUFNLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxTQUFTLENBQUMsZUFBZSxDQUFDLENBQUM7QUFDckQsQ0FBQztBQWRELHdDQWNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGljdCB9IGZyb20gJy4uL3V0aWxzL3R5cGVzJztcbmltcG9ydCBDb250YWluZXIgZnJvbSAnLi9jb250YWluZXInO1xuXG5leHBvcnQgaW50ZXJmYWNlIEluamVjdGlvbiB7XG4gIGxvb2t1cDogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgSVNfSU5KRUNUSU9OID0gU3ltYm9sLmZvcignZGVuYWxpOmNvbnRhaW5lcjppbmplY3Rpb24tcGxhY2Vob2xkZXInKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGlzSW5qZWN0aW9uKHZhbHVlOiBhbnkpOiB2YWx1ZSBpcyBJbmplY3Rpb24ge1xuICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiBCb29sZWFuKHZhbHVlW0lTX0lOSkVDVElPTl0pO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpbmplY3Q8VCA9IGFueT4obG9va3VwOiBzdHJpbmcpOiBUIHtcbiAgcmV0dXJuIDxhbnk+e1xuICAgIFtJU19JTkpFQ1RJT05dOiB0cnVlLFxuICAgIGxvb2t1cFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW5qZWN0SW5zdGFuY2UoaW5zdGFuY2U6IGFueSwgY29udGFpbmVyOiBDb250YWluZXIpIHtcbiAgbGV0IGNsYXNzTWV0YSA9IGNvbnRhaW5lci5tZXRhRm9yKGluc3RhbmNlLmNvbnN0cnVjdG9yKTtcbiAgaWYgKCFjbGFzc01ldGEuaW5qZWN0aW9uc0NhY2hlKSB7XG4gICAgbGV0IGluamVjdGlvbnM6IERpY3Q8YW55PiA9IHsgY29udGFpbmVyIH07XG4gICAgZm9yIChsZXQga2V5IGluIGluc3RhbmNlKSB7XG4gICAgICBsZXQgdmFsdWUgPSBpbnN0YW5jZVtrZXldO1xuICAgICAgaWYgKGlzSW5qZWN0aW9uKHZhbHVlKSkge1xuICAgICAgICBpbmplY3Rpb25zW2tleV0gPSBjb250YWluZXIubG9va3VwKHZhbHVlLmxvb2t1cCk7XG4gICAgICB9XG4gICAgfVxuICAgIGNsYXNzTWV0YS5pbmplY3Rpb25zQ2FjaGUgPSBpbmplY3Rpb25zO1xuICB9XG4gIC8vIGNvbnNvbGUubG9nKCdhcHBseWluZyBpbmplY3Rpb25zIHRvJywgaW5zdGFuY2UsIGNsYXNzTWV0YS5pbmplY3Rpb25zQ2FjaGUpO1xuICBPYmplY3QuYXNzaWduKGluc3RhbmNlLCBjbGFzc01ldGEuaW5qZWN0aW9uc0NhY2hlKTtcbn1cbiJdfQ==